prometheus:
  prometheusSpec:
    kubeControllerManager:
      enabled: true
      scheme: http
      serviceMonitor:
        scheme: http
        insecureSkipVerify: true
      endpoints:
        - 10252  # Metrics port for kube-controller-manager
    kubeScheduler:
      enabled: true
      scheme: http
      serviceMonitor:
        scheme: http
        insecureSkipVerify: true
      endpoints:
        - 10251  # Metrics port for kube-scheduler
    kubeProxy:
      enabled: true
      scheme: http
      serviceMonitor:
        scheme: http
        insecureSkipVerify: true
      endpoints:
        - 10249  # Metrics port for kube-proxy
    kubeEtcd:
      enabled: true
      scheme: http
      serviceMonitor:
        scheme: http
        insecureSkipVerify: true
      endpoints:
        - 2381
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector:
      matchLabels:
        release: prometheus-stack-dev
    podMonitorSelector:
      matchLabels:
        prometheus: prometheus-stack
    resources:
      requests:
        cpu: "200m"
        memory: "1Gi"
      limits:
        memory: "2Gi"
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
grafana:
  adminPassword: newpassword123
  persistence:
    enabled: true
    storageClassName: standard
    accessModes: ["ReadWriteOnce"]
    size: 5Gi
  grafana.ini:
    server:
      domain: grafana.sharkapp.local
      root_url: http://grafana.sharkapp.local:30931/
    auth.anonymous:
      enabled: true
      org_role: Viewer
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki.dev.svc.cluster.local:3100
      access: proxy
      isDefault: false
    - name: Tempo
      type: tempo
      url: http://grafana-tempo-dev.dev.svc.cluster.local:3100
      access: proxy
      isDefault: false
      jsonData:
        httpMethod: GET
        tracesToLogs:
          datasourceUid: "loki"
          spanStartTimeShift: "-1h"
          spanEndTimeShift: "1h"
        tracesToMetrics:
          datasourceUid: "prometheus"
  ingress:
    enabled: false  # Disable Helm-managed Ingress
prometheus-node-exporter:
  enabled: true
app:
  serviceMonitors: []
# app:
#   serviceMonitors:
#     - name: sharkapp-frontend
#       namespace: dev
#       selector:
#         matchLabels:
#           app.kubernetes.io/instance: frontend-dev
#           app.kubernetes.io/name: frontend
#       additionalLabels:  # Ensure the label matches the selector
#         release: prometheus-stack-dev
#       endpoints:
#         - port: http
#           path: /metrics
#           interval: 15s
#           targetPort: 8000
#           relabelings:
#             - action: replace
#               sourceLabels:
#               - __meta_kubernetes_pod_namespace
#               targetLabel: namespace
#     - name: sharkapp-backend
#       namespace: dev
#       selector:
#         matchLabels:
#           app.kubernetes.io/instance: backend-dev  # Match the service label
#           app.kubernetes.io/name: backend
#       additionalLabels:
#         release: prometheus-stack-dev
#       endpoints:
#         - port: http
#           path: /metrics
#           interval: 15s
#           targetPort: 8000
#           relabelings:
#             - action: replace
#               sourceLabels:
#               - __meta_kubernetes_pod_namespace
#               targetLabel: namespace
#     - name: process-exporter
#       namespace: dev
#       selector:
#         matchLabels:
#           app: process-exporter
#       additionalLabels:
#         release: prometheus-stack-dev
#       endpoints:
#         - port: metrics
#           path: /metrics
#           interval: 15s
#           relabelings:
#             - action: replace
#               sourceLabels:
#               - __meta_kubernetes_pod_namespace
#               targetLabel: namespace