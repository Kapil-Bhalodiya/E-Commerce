# Prod Environment Prometheus & Grafana Configuration
# Production-ready settings with high availability

namespace: prod  # Deploy to prod namespace

# Grafana specific settings for PRODUCTION
grafana:
  adminPassword: "SecurePassword123!"  # Strong password for production
  
  # Domain configuration for production
  grafana.ini:
    server:
      domain: "prod.grafana.local"  # Production Grafana URL
      root_url: "https://prod.grafana.local/"  # HTTPS in production
    security:
      admin_user: "admin"  # Admin username
      cookie_secure: true  # Secure cookies
      cookie_samesite: "strict"  # CSRF protection
  
  # Production ingress with TLS
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"  # Force HTTPS
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Auto TLS cert
    hosts:
      - prod.grafana.local
    tls:  # TLS configuration
      - secretName: prod-grafana-tls  # TLS certificate secret
        hosts:
          - prod.grafana.local
  
  # Production data sources
  additionalDataSources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-stack-prod-kube-prom-prometheus.prod.svc.cluster.local:9090
      access: proxy
      isDefault: true
  
  # High availability for Grafana
  replicas: 2  # Run 2 Grafana instances
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# Prometheus production settings
prometheus:
  prometheusSpec:
    replicas: 2  # High availability - 2 Prometheus instances
    retention: "30d"  # Keep metrics for 30 days in production
    
    # Service monitor selector for production
    serviceMonitorSelector:
      matchLabels:
        release: prometheus-stack-prod
    
    # Production resources
    resources:
      requests:
        cpu: "500m"
        memory: "2Gi"
      limits:
        cpu: "2000m"
        memory: "4Gi"
    
    # Larger storage for production
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 50Gi  # 50GB storage for production
    
    # Security settings
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      fsGroup: 2000

# Alerting configuration for production
alertmanager:
  enabled: true  # Enable alerting in production
  alertmanagerSpec:
    replicas: 2  # High availability
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"