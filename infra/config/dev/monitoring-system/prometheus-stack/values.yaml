namespace: dev
grafanaHost: dev.grafana.local

annotations:
  kubernetes.io/ingress.class: "nginx"

ingressClassName: "nginx"

domain: dev.grafana.local

services:
  - path: /
    pathType: Prefix
    serviceName: prometheus-stack-grafana
    servicePort: 80

tls:
  enabled: false   # or true if using cert-manager
  issuer: letsencrypt-dev
  secretName: grafana-tls

kube-prometheus-stack:
  prometheus-node-exporter:
    hostPort: false
    service:
      port: 9100
    serviceMonitor:
      enabled: true
      namespace: dev

  prometheus:
    prometheusSpec:
      serviceMonitorSelector:
        matchLabels:
          release: prometheus-stack-dev
      resources:
        requests:
          cpu: "100m"
          memory: "512Mi"
        limits:
          cpu: "500m"
          memory: "1Gi"


  grafana:
    enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - dev.grafana.local
      paths:
        - /
      pathType: Prefix
      # tls:
      #   - hosts:
      #       - dev.grafana.local
      #     secretName: grafana-tls
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://loki:3100
        access: proxy
        isDefault: false
        jsonData:
          maxLines: 1000
          timeout: 60
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: '1'
        editable: true
  
  # Prometheus settings for DEV (smaller resources)
  # prometheus:
  #   prometheusSpec:
  #     serviceMonitorSelectorNilUsesHelmValues: false
  #     serviceMonitorSelector: {}
  #     serviceMonitorNamespaceSelector:
  #       namespaceSelector:
  #         matchNames:
  #           - dev
  #     resources:
  #       requests:
  #         cpu: "100m"
  #         memory: "512Mi"
  #       limits:
  #         cpu: "500m"
  #         memory: "1Gi"
      # storageSpec: {}
      # serviceMonitorSelectorNilUsesHelmValues: false
      # serviceMonitorSelector:
      #   matchLabels:
      #     app.kubernetes.io/name: prometheus-node-exporter
      # serviceMonitorNamespaceSelector:
      #   matchNames:
      #     - monitoring